name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET 9 SDK
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Extract version from tag
        id: version
        run: echo "version=${GITHUB_REF_NAME#v}" >> $GITHUB_OUTPUT

      - name: Verify .csproj version matches tag
        run: |
          csproj_file=src/BlazorSortable/BlazorSortable.csproj
          echo "Using project: $csproj_file"

          sudo apt-get update && sudo apt-get install -y libxml2-utils

          csproj_version=$(xmllint --xpath "/*[local-name()='Project']/*[local-name()='PropertyGroup']/*[local-name()='Version']/text()" "$csproj_file")
          tag_version="${{ steps.version.outputs.version }}"

          echo "csproj version: $csproj_version"
          echo "tag version: $tag_version"

          if [ "$csproj_version" != "$tag_version" ]; then
            echo "Version in .csproj ($csproj_version) does not match tag ($tag_version)"
            exit 1
          fi

      - name: Restore dependencies
        run: dotnet restore "$csproj_file"

      - name: Build
        run: dotnet build "$csproj_file" --configuration Release --no-restore

      - name: Pack
        run: dotnet pack "$csproj_file" --configuration Release --no-build --output ./artifacts

      - name: Publish to NuGet
        run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          prerelease: ${{ contains(github.ref_name, '-') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
